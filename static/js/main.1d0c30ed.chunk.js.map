{"version":3,"sources":["components/Navbar/Navbar.js","components/Home/Home.js","components/grid.svg","components/Users/Users.js","components/Address/Address.js","components/Nowhere/Nowhere.js","components/UserDetails/UserDetails.js","components/Main/Main.js","components/Footer/Footer.js","components/App/App.js","index.js"],"names":["Navbar","props","className","activeClassName","to","exact","Home","useState","instructions","setInstructions","onClick","Users","userData","length","src","loader","alt","map","user","picture","medium","name","first","last","email","cell","useStyles","makeStyles","theme","table","minWidth","tableContainer","borderRadius","margin","maxWidth","tableHeaderCell","fontWeight","backgroundColor","color","palette","getContrastText","primary","dark","secondary","status","fontSize","padding","display","Address","classes","React","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","sort","a","b","slice","thumbnail","location","street","city","state","country","postcode","TablePagination","rowsPerPageOptions","count","onPageChange","event","newPage","onRowsPerPageChange","target","value","Nowhere","UserDetails","findUser","id","useParams","large","dob","age","login","username","password","Main","setUserData","fetch","resp","json","data","results","useEffect","fetchData","path","find","Footer","App","ReactDOM","render","StrictMode","hashType","document","getElementById"],"mappings":"6WAmBeA,EAhBA,SAACC,GACd,OACE,sBAAKC,UAAU,SAAf,UACE,cAAC,IAAD,CAASA,UAAU,OAAOC,gBAAgB,SAASC,GAAG,IAAIC,OAAK,EAA/D,kBAGA,cAAC,IAAD,CAASH,UAAU,OAAOC,gBAAgB,SAASC,GAAG,SAAtD,mBAGA,cAAC,IAAD,CAASF,UAAU,OAAOC,gBAAgB,SAASC,GAAG,aAAtD,yB,iCCsBSE,G,MA/BF,SAACL,GACZ,MAAwCM,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAWA,OACE,uBAAMP,UAAU,iBAAhB,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAIA,UAAU,WAAd,UACE,yCADF,QAGA,sKAIA,wBAAQQ,QApBd,WACED,EAAgB,8hBAmBZ,kCAEF,qBAAKP,UAAU,eAAf,SACE,4BAAIM,WC5BG,G,MAAA,IAA0B,kCC6B1BG,EAzBD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACf,OACE,0BAASV,UAAU,QAAnB,UACE,8CACA,sBAAKA,UAAU,iBAAf,UACuB,IAApBU,EAASC,QACR,qBAAKX,UAAU,YAAYY,IAAKC,EAAQC,IAAI,eAE7CJ,GACCA,EAASK,KAAI,SAACC,GAAD,OACX,sBAAqBhB,UAAU,WAA/B,UACE,qBAAKY,IAAKI,EAAKC,QAAQC,OAAQJ,IAAI,iBACnC,4BAAIE,EAAKG,KAAKC,MAAQ,IAAMJ,EAAKG,KAAKE,OACtC,4BAAIL,EAAKM,QACT,mDAAUN,EAAKO,QACf,cAAC,IAAD,CAASrB,GAAE,iBAAYc,EAAKO,MAA5B,SACE,0DANMP,EAAKO,gB,yFCErBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,KAEZC,eAAgB,CACdC,aAAc,GACdC,OAAQ,YACRC,SAAU,KAEZC,gBAAiB,CACfC,WAAY,OACZC,gBAAiB,UACjBC,MAAOV,EAAMW,QAAQC,gBAAgBZ,EAAMW,QAAQE,QAAQC,OAE7DrB,KAAM,CACJe,WAAY,OACZE,MAAOV,EAAMW,QAAQI,UAAUD,MAEjCE,OAAQ,CACNR,WAAY,OACZS,SAAU,UACVP,MAAO,QACPD,gBAAiB,OACjBL,aAAc,EACdc,QAAS,WACTC,QAAS,oBAmFEC,EA/EC,SAAC,GAAkB,IAAhBpC,EAAe,EAAfA,SACXqC,EAAUvB,IAEhB,EAAwBwB,WAAe,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsCF,WAAe,GAArD,mBAAOG,EAAP,KAAoBC,EAApB,KAWA,OACE,sBAAKpD,UAAU,UAAf,UACE,kDACA,8BACE,cAACqD,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOxD,UAAW+C,EAAQpB,MAAO,aAAW,eAA5C,UACE,cAAC8B,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAW3D,UAAW+C,EAAQd,gBAA9B,kBACA,cAAC0B,EAAA,EAAD,CAAW3D,UAAW+C,EAAQd,gBAA9B,4BAGA,cAAC0B,EAAA,EAAD,CAAW3D,UAAW+C,EAAQd,gBAA9B,qBAGA,cAAC0B,EAAA,EAAD,CAAW3D,UAAW+C,EAAQd,gBAA9B,8BAKJ,eAAC2B,EAAA,EAAD,WACuB,IAApBlD,EAASC,QACR,qBAAKX,UAAU,YAAYY,IAAKC,EAAQC,IAAI,eAE7CJ,GACCA,EACGmD,MAAK,SAACC,EAAGC,GACR,OAAID,EAAE3C,KAAKE,KAAO0C,EAAE5C,KAAKE,MAAc,EAC9ByC,EAAE3C,KAAKE,OAAS0C,EAAE5C,KAAKE,KAAa,EACjC,KAEb2C,MAAMf,EAAOE,EAAaF,EAAOE,EAAcA,GAC/CpC,KAAI,SAACC,GAAD,OACH,eAAC0C,EAAA,EAAD,CAA0B1D,UAAU,WAApC,UACE,eAAC,IAAD,CAASE,GAAE,iBAAYc,EAAKO,MAA5B,UACE,cAACoC,EAAA,EAAD,UACE,qBACE/C,IAAKI,EAAKC,QAAQgD,UAClBnD,IAAI,mBAGR,cAAC6C,EAAA,EAAD,oBAAe3C,EAAKG,KAAKC,MAAzB,YAAkCJ,EAAKG,KAAKE,WAE9C,cAACsC,EAAA,EAAD,oBAAe3C,EAAKkD,SAASC,OAAOhD,KAApC,aAA6CH,EAAKkD,SAASE,KAA3D,aAAoEpD,EAAKkD,SAASG,SAClF,cAACV,EAAA,EAAD,UAAY3C,EAAKkD,SAASI,UAC1B,cAACX,EAAA,EAAD,UAAY3C,EAAKkD,SAASK,aAZbvD,EAAKO,YAgB5B,cAACiD,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BC,MAAOhE,EAASC,OAChBwC,YAAaA,EACbF,KAAMA,EACN0B,aA/Da,SAACC,EAAOC,GAC/B3B,EAAQ2B,IA+DEC,oBA5DoB,SAACF,GAC/BxB,GAAgBwB,EAAMG,OAAOC,OAC7B9B,EAAQ,iBC9CG+B,G,MATC,SAAClF,GACf,OACE,sBAAKC,UAAU,WAAf,UACE,qCACA,yE,QCuBSkF,G,MA1BK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACbC,EAAOC,cAAPD,GACJpE,EAAOmE,EAASC,GACpB,OACE,mCACGpE,GACC,0BAAkBhB,UAAU,oBAA5B,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKY,IAAKI,EAAKC,QAAQqE,MAAOxE,IAAI,iBAClC,4BAAIE,EAAKG,KAAKC,MAAQ,IAAMJ,EAAKG,KAAKE,OACtC,4BAAIL,EAAKM,QACT,mDAAUN,EAAKO,WAEjB,sBAAKvB,UAAU,eAAf,UACE,8CACA,+CAAgBgB,EAAKkD,SAASC,OAAOhD,KAArC,aAA8CH,EAAKkD,SAASE,KAA5D,aAAqEpD,EAAKkD,SAASG,MAAnF,aAA6FrD,EAAKkD,SAASI,QAA3G,aAAuHtD,EAAKkD,SAASK,YACrI,2CAAYvD,EAAKuE,IAAIC,IAArB,gBACA,gDAAiBxE,EAAKyE,MAAMC,YAC5B,gDAAiB1E,EAAKyE,MAAME,iBAZlBP,OC0CPQ,EA3CF,SAAC7F,GACZ,MAAgCM,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBmF,EAAjB,KADsB,4CAOtB,8BAAA/B,EAAA,4DAEI,yEAFJ,SAGmBgC,MADf,0EAFJ,cAGMC,EAHN,gBAImBA,EAAKC,OAJxB,OAIMC,EAJN,OAKEJ,EAAYI,EAAKC,SALnB,4CAPsB,sBAmBtB,OAJAC,qBAAU,YAfY,mCAgBpBC,KACC,IAGD,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAASlG,OAAK,EAA1B,SACE,cAAC,EAAD,CAAOO,SAAUA,MAEnB,cAAC,IAAD,CAAO2F,KAAK,aAAZ,SACE,cAAC,EAAD,CAAalB,SAvBrB,SAAkBC,GAChB,OAAO1E,EAAS4F,MAAK,SAACtF,GAAD,OAAUoE,IAAOpE,EAAKO,aAwBvC,cAAC,IAAD,CAAO8E,KAAK,aAAZ,SACE,cAAC,EAAD,CAAS3F,SAAUA,MAErB,cAAC,IAAD,CAAO2F,KAAK,OAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAIlG,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUD,GAAG,eCrCNqG,EARA,SAACxG,GACd,OACE,qBAAKC,UAAU,SAAf,SACE,2DCkBSwG,MAhBf,WACE,OACE,sBAAKxG,UAAU,MAAf,UACE,iCACE,cAAC,EAAD,MAEF,+BACE,cAAC,EAAD,MAEF,iCACE,cAAC,EAAD,UCTRyG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAYC,SAAS,WAArB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.1d0c30ed.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport './navbar.css';\n\nconst Navbar = (props) => {\n  return (\n    <div className=\"navbar\">\n      <NavLink className=\"link\" activeClassName=\"active\" to=\"/\" exact>\n        Home\n      </NavLink>\n      <NavLink className=\"link\" activeClassName=\"active\" to=\"/users\">\n        Users\n      </NavLink>\n      <NavLink className=\"link\" activeClassName=\"active\" to=\"/addresses\">\n        Address\n      </NavLink>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import './home.css';\nimport { useState } from 'react';\n\nconst Home = (props) => {\n  const [instructions, setInstructions] = useState('');\n  function showInstructions() {\n    setInstructions(\n      `I am your instructions. I will tell you to do a lot of things!\n      First, to see my list of randomly generated users, go to the 'User Page'. \n      While you are there, you will be able to navigate to see a user's 'Details\n      Page' by clicking on their card button. Finally, if you wish to see random addresses, \n      simply navigate to the 'Address Page'. There, you can also navigate to a user's 'Details Page' \n      by clicking on their profile picture or name. I hope that wasn't too confusing... Have fun! ðŸ˜Š  `\n    );\n  }\n  return (\n    <main className=\"home-container\">\n      <div className=\"home\">\n        <h1 className=\"greeting\">\n          <span>howdy</span>()\n        </h1>\n        <p>\n          Welcome to josRouter! Here, I will show you random and fake user data\n          using the RandomUser API. Read the instructions to get started.\n        </p>\n        <button onClick={showInstructions}>Show Instructions</button>\n      </div>\n      <div className=\"instructions\">\n        <p>{instructions}</p>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/grid.306271cf.svg\";","import './users.css';\nimport { NavLink } from 'react-router-dom';\nimport loader from '../grid.svg';\n\nconst Users = ({ userData }) => {\n  return (\n    <section className=\"users\">\n      <h1>Random Users</h1>\n      <div className=\"card-container\">\n        {userData.length === 0 && (\n          <img className=\"svgLoader\" src={loader} alt=\"svg loader\" />\n        )}\n        {userData &&\n          userData.map((user) => (\n            <div key={user.cell} className=\"userCard\">\n              <img src={user.picture.medium} alt=\"user profile\" />\n              <p>{user.name.first + ' ' + user.name.last}</p>\n              <p>{user.email}</p>\n              <p>{`ðŸ“ž ${user.cell}`}</p>\n              <NavLink to={`/users/${user.cell}`}>\n                <button>See User Details</button>\n              </NavLink>\n            </div>\n          ))}\n      </div>\n    </section>\n  );\n};\n\nexport default Users;\n","import './address.css';\nimport { NavLink } from 'react-router-dom';\nimport loader from '../grid.svg';\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TablePagination,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  tableContainer: {\n    borderRadius: 15,\n    margin: '10px 10px',\n    maxWidth: 950,\n  },\n  tableHeaderCell: {\n    fontWeight: 'bold',\n    backgroundColor: '#2d3549',\n    color: theme.palette.getContrastText(theme.palette.primary.dark),\n  },\n  name: {\n    fontWeight: 'bold',\n    color: theme.palette.secondary.dark,\n  },\n  status: {\n    fontWeight: 'bold',\n    fontSize: '0.75rem',\n    color: 'white',\n    backgroundColor: 'grey',\n    borderRadius: 8,\n    padding: '3px 10px',\n    display: 'inline-block',\n  },\n}));\n\nconst Address = ({ userData }) => {\n  const classes = useStyles();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <div className=\"address\">\n      <h1>Random Addresses</h1>\n      <div>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell className={classes.tableHeaderCell}>Name</TableCell>\n                <TableCell className={classes.tableHeaderCell}>\n                  Street Address\n                </TableCell>\n                <TableCell className={classes.tableHeaderCell}>\n                  Country\n                </TableCell>\n                <TableCell className={classes.tableHeaderCell}>\n                  Postal Code\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {userData.length === 0 && (\n                <img className=\"svgLoader\" src={loader} alt=\"svg loader\" />\n              )}\n              {userData &&\n                userData\n                  .sort((a, b) => {\n                    if (a.name.last < b.name.last) return -1;\n                    else if (a.name.last === b.name.last) return 0;\n                    else return 1;\n                  })\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((user) => (\n                    <TableRow key={user.cell} className=\"tableRow\">\n                      <NavLink to={`/users/${user.cell}`}>\n                        <TableCell>\n                          <img\n                            src={user.picture.thumbnail}\n                            alt=\"user profile\"\n                          />\n                        </TableCell>\n                        <TableCell>{`${user.name.first} ${user.name.last}`}</TableCell>\n                      </NavLink>\n                      <TableCell>{`${user.location.street.name}, ${user.location.city}, ${user.location.state}`}</TableCell>\n                      <TableCell>{user.location.country}</TableCell>\n                      <TableCell>{user.location.postcode}</TableCell>\n                    </TableRow>\n                  ))}\n            </TableBody>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 20]}\n              count={userData.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          </Table>\n        </TableContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default Address;\n","import './nowhere.css';\n\nconst Nowhere = (props) => {\n  return (\n    <div className=\"notFound\">\n      <h1>404</h1>\n      <p>Oopsy daisies. Something went wrong</p>\n    </div>\n  );\n};\n\nexport default Nowhere;\n","import { useParams } from 'react-router-dom';\nimport './userDetails.css';\n\nconst UserDetails = ({ findUser }) => {\n  const { id } = useParams();\n  let user = findUser(id);\n  return (\n    <>\n      {user && (\n        <section key={id} className=\"filteredUser-card\">\n          <div className=\"basic-info\">\n            <img src={user.picture.large} alt=\"user profile\" />\n            <p>{user.name.first + ' ' + user.name.last}</p>\n            <p>{user.email}</p>\n            <p>{`ðŸ“ž ${user.cell}`}</p>\n          </div>\n          <div className=\"user-details\">\n            <h2>User Details</h2>\n            <p>{`Address: ${user.location.street.name}, ${user.location.city}, ${user.location.state}, ${user.location.country}, ${user.location.postcode}`}</p>\n            <p>{`Age: ${user.dob.age} years old`}</p>\n            <p>{`Username: ${user.login.username}`}</p>\n            <p>{`Password: ${user.login.password}`}</p>\n          </div>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default UserDetails;\n","import Home from '../Home/Home';\nimport Users from '../Users/Users';\nimport Address from '../Address/Address';\nimport Nowhere from '../Nowhere/Nowhere';\nimport UserDetails from '../UserDetails/UserDetails';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nconst Main = (props) => {\n  const [userData, setUserData] = useState([]);\n\n  function findUser(id) {\n    return userData.find((user) => id === user.cell);\n  }\n\n  async function fetchData() {\n    let url =\n      'https://randomuser.me/api/?seed=cano0029&results=20&nat=au,ca,nz,gb,us';\n    let resp = await fetch(url);\n    let data = await resp.json();\n    setUserData(data.results);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <Switch>\n        <Route path=\"/users\" exact>\n          <Users userData={userData} />\n        </Route>\n        <Route path=\"/users/:id\">\n          <UserDetails findUser={findUser} />\n        </Route>\n        <Route path=\"/addresses\">\n          <Address userData={userData} />\n        </Route>\n        <Route path=\"/404\">\n          <Nowhere />\n        </Route>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n        <Redirect to=\"/404\" />\n      </Switch>\n    </>\n  );\n};\n\nexport default Main;\n","const Footer = (props) => {\n  return (\n    <div className=\"footer\">\n      <p>Copyright Â© jojo2021</p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import './App.css';\nimport Navbar from '../Navbar/Navbar';\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <Navbar />\n      </header>\n      <main>\n        <Main />\n      </main>\n      <footer>\n        <Footer />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter hashType=\"hashbang\">\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}